import sys
input=sys.stdin.readline

def solution(paper):
    target1x4=[[(0,0),(0,1),(0,2),(0,3)]]
    target2x2=[[(0,0),(0,1),(1,0),(1,1)]]
    target2x3=[[(0,0),(1,0),(0,1),(0,2)],[(1,0),(1,1),(0,2),(1,2)],[(0,0),(1,0),(1,1),(1,2)],[(0,0),(0,1),(0,2),(1,2)],[(0,1),(0,2),(1,0),(1,1)],[(0,0),(0,1),(1,1),(1,2)],[(0,0),(0,1),(0,2),(1,1)],[(0,1),(1,0),(1,1),(1,2)]]
    target3x2=[[(0,0),(1,0),(2,0),(2,1)],[(0,0),(0,1),(1,1),(2,1)],[(2,0),(2,1),(1,1),(0,1)],[(0,0),(0,1),(1,0),(2,0)],[(0,0),(1,0),(1,1),(2,1)],[(0,1),(1,0),(1,1),(2,0)],[(0,1),(1,0),(1,1),(2,1)],[(0,0),(1,0),(2,0),(1,1)]]
    target4x1=[[(0,0),(1,0),(2,0),(3,0)]]
    bucket=[]
    bucket.append(target1x4)
    bucket.append(target2x2)
    bucket.append(target2x3)
    bucket.append(target3x2)
    bucket.append(target4x1)
    
    steps=[(N,M-3),(N-1,M-1),(N-1,M-2),(N-2,M-1),(N-3,M)]

    maxNum=0
    for idx,(row,col) in enumerate(steps):
        for i in range(row):
            for j in range(col):
                for bucketItem in bucket[idx]:
                    tmpNum=0
                    for dy,dx in bucketItem:
                        targetY=i+dy
                        targetX=j+dx
                        tmpNum+=paper[targetY][targetX]
                    if maxNum<tmpNum: maxNum=tmpNum
    
    return maxNum

N,M=map(int,input().split())

paper=[]

for _ in range(N):
    paper.append(list(map(int,input().split())))

print(solution(paper))



# 1*4 -> [[(0,0),(0,1),(0,2),(0,3)]]
# 2*2 -> [[(0,0),(0,1),(1,0),(1,1)]]
# 2*3 -> [[(0,0),(1,0),(0,1),(0,2)],[(1,0),(1,1),(0,2),(1,2)],[(0,0),(1,0),(1,1),(1,2)],[(0,0),(0,1),(0,2),(1,2)],[(0,1),(0,2),(1,0),(1,1)],[(0,0),(0,1),(1,1),(1,2)],[(0,0),(0,1),(0,2),(1,1)],[(0,1),(1,0),(1,1),(1,2)]]
# 3*2 -> [[(0,0),(1,0),(2,0),(2,1)],[(0,0),(0,1),(1,1),(2,1)],[(2,0),(2,1),(1,1),(0,1)],[(0,0),(0,1),(1,0),(2,0)],[(0,0),(1,0),(1,1),(2,1)],[(0,1),(1,0),(1,1),(2,0)],[(0,1),(1,0),(1,1),(2,1)],[(0,0),(1,0),(2,0),(1,1)]]
# 4*1 -> [[(0,0),(1,0),(2,0),(3,0)]]

    